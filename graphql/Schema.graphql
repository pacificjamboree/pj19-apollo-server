# import OOS from 'types/OOS.graphql'
# import Adventure from 'types/Adventure.graphql'
# import * from 'inputs.graphql'
# import * from 'payloads.graphql'

scalar GraphQLDate

scalar GraphQLDateTime

enum WorkflowState {
  defined
  active
  deleted
}

enum AdventureLocation {
  ONSITE
  OFFSITE
}

type Query {
  allOffersOfService: [OOS]
  offerOfService(oosNumber: String!): OOS
  allAdventures: [Adventure]
  adventure(adventureCode: String!): Adventure
}

type Mutation {
  createOfferOfService(input: CreateOOSInput!): OOSPayload
  toggleOfferOfServiceWorkflowStateById(
    input: ToggleOfferOfServiceWorkflowStateByIdInput!
  ): OOSPayload
  toggleOfferOfServiceWorkflowStateOOSNumber(
    input: ToggleOfferOfServiceWorkflowStateByOOSNumber!
  ): OOSPayload
  assignOfferOfServiceToAdventure(
    input: AssignOfferOfServiceToAdventure!
  ): OOSPayload
  updateOfferOfService(
    oosId: ID!
    input: UpdateOfferOfServiceInput!
  ): OOSPayload
}
