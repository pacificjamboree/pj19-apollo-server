# import OOS from 'types/OOS.graphql'
# import Adventure from 'types/Adventure.graphql'
# import * from 'enums.graphql'
# import * from 'inputs.graphql'
# import * from 'payloads.graphql'

scalar GraphQLDate

scalar GraphQLDateTime

type Query {
  allOffersOfService: [OOS]
  allAdventures(filters: AdventureFilter): [Adventure]
  offerOfService(search: OfferOfServiceSearchInput!): OOS
  adventure(search: AdventureSearchInput!): Adventure
}

type Mutation {
  createOfferOfService(input: CreateOOSInput!): OOSPayload
  toggleOfferOfServiceWorkflowStateById(
    oosId: ID!
    input: ToggleOfferOfServiceWorkflowStateByIdInput!
  ): OOSPayload
  toggleOfferOfServiceWorkflowStateByOOSNumber(
    oosNumber: String!
    input: ToggleOfferOfServiceWorkflowStateByOOSNumber!
  ): OOSPayload
  assignOfferOfServiceToAdventure(
    oosId: ID!
    input: AssignOfferOfServiceToAdventure!
  ): OOSPayload
  updateOfferOfService(
    oosId: ID!
    input: UpdateOfferOfServiceInput!
  ): OOSPayload

  assignManagerToAdventure(
    adventureId: ID!
    input: AssignManagerToAdventure!
  ): AssignManagerToAdventurePayload
  removeManagerFromAdventure(
    adventureId: ID!
    input: RemoveManagerFromAdventure!
  ): RemoveManagerFromAdventurePayload
}
